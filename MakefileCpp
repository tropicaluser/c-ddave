# Compiler
CXX = g++

# Include and Library paths
INCS = -IC:\MinGW_SDL\include\SDL2
LIBS = -LC:\MinGW_SDL\lib

# Compiler and Linker Flags
CXXFLAGS = -std=c++11 -Wall
LFLAGS = -lmingw32 -lSDL2main -lSDL2

# Source files
SRC_C_GAME = ./common/game.c
SRC_C = ./common/common.c
SRC_CPP_TILES = ./cpp/tiles.cpp
SRC_CPP_LEVEL = ./cpp/level.cpp
SRC_CPP_IMDAVE = ./cpp/imdave.cpp

# Object files
OBJ_C_GAME = ./common/game.o
OBJ_C = ./common/common.o
OBJ_CPP_TILES = tiles.o
OBJ_CPP_LEVEL = level.o
OBJ_CPP_IMDAVE = imdave.o

# Executable names
EXE_TILES = tiles.exe
EXE_LEVEL = level.exe
EXE_IMDAVE = imdave.exe

# Targets
all: clean_exe $(EXE_TILES) $(EXE_LEVEL) $(EXE_IMDAVE)

# Clean the game.o file to avoid conflicts
clean_exe:
	@if [ -f $(EXE_IMDAVE) ]; then rm -f $(EXE_IMDAVE); fi
	@if [ -f ./common/game.o ]; then rm -f ./common/game.o; fi

# Rule to compile game.c
$(OBJ_C_GAME): $(SRC_C_GAME)
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

# Rule to compile common.c
$(OBJ_C): $(SRC_C)
	$(CXX) $(CXXFLAGS) $(INCS) -c $< -o $@

# Rule to compile tiles.cpp
$(EXE_TILES): $(SRC_CPP_TILES) $(OBJ_C) $(OBJ_C_GAME)
	$(CXX) $(SRC_CPP_TILES) $(OBJ_C) $(OBJ_C_GAME) $(INCS) $(LIBS) $(CXXFLAGS) $(LFLAGS) -o $@

# Rule to compile level.cpp
$(EXE_LEVEL): $(SRC_CPP_LEVEL) $(OBJ_C) $(OBJ_C_GAME)
	$(CXX) $(SRC_CPP_LEVEL) $(OBJ_C) $(OBJ_C_GAME) $(INCS) $(LIBS) $(CXXFLAGS) $(LFLAGS) -o $@

# Rule to compile imdave.cpp
$(EXE_IMDAVE): $(SRC_CPP_IMDAVE) $(OBJ_C) $(OBJ_C_GAME)
	$(CXX) $(SRC_CPP_IMDAVE) $(OBJ_C) $(OBJ_C_GAME) $(INCS) $(LIBS) $(CXXFLAGS) $(LFLAGS) -o $@

# Clean up build files
clean:
	rm -f $(OBJ_C) $(OBJ_C_GAME) $(EXE_TILES) $(EXE_LEVEL) $(EXE_IMDAVE) $(OBJ_CPP_TILES) $(OBJ_CPP_LEVEL)
